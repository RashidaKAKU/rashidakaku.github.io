[{"content":"群晖 Container Manager（下面简称 CM） 部署教程。 Wallabag 项目官方地址。\n准备工作 首先打开群晖的文件管理在 docker 目录下 创建 wallabag 与 wallabagdb 文件夹。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 version: \u0026#39;3.9\u0026#39; services: wallabag: image: wallabag/wallabag container_name: Wallabag restart: on-failure:5 environment: - MYSQL_ROOT_PASSWORD=wallaroot - SYMFONY__ENV__DATABASE_DRIVER=pdo_mysql - SYMFONY__ENV__DATABASE_HOST=db - SYMFONY__ENV__DATABASE_PORT=3306 - SYMFONY__ENV__DATABASE_NAME=wallabag - SYMFONY__ENV__DATABASE_USER=wallabag - SYMFONY__ENV__DATABASE_PASSWORD=wallapass - SYMFONY__ENV__DATABASE_CHARSET=utf8mb4 - SYMFONY__ENV__DOMAIN_NAME=xxxxxx # 修改为你反代之后的 https 地址，否则可能会出现加载错误。 - SYMFONY__ENV__SERVER_NAME=mariushosting - SYMFONY__ENV__FOSUSER_CONFIRMATION=false - SYMFONY__ENV__TWOFACTOR_AUTH=true ports: - 6749:80 volumes: - /volume1/docker/wallabag/images:/var/www/wallabag/web/assets/images:rw - /volume1/docker/wallabag/data:/var/www/wallabag/data:rw depends_on: - db - redis db: image: mariadb container_name: Wallabag-DB restart: always environment: - MYSQL_ROOT_PASSWORD=wallaroot - TZ=Asia/Tokyo volumes: - /volume1/docker/wallabagdb:/var/lib/mysql:rw redis: image: redis:alpine container_name: Wallabag-REDIS restart: on-failure:5 修改 compose 文件中的映射端口。\n修改 db 中的文件映射本地路径，如果按照准备阶段创建文件夹，可以不用修改。\n修改 wallabag 中的文件映射本地路径，如果按照准备阶段创建文件夹，可以不用修改。\n修改 SYMFONY__ENV__DOMAIN_NAME=xxxxxx 中的xxxxxx 为你反代之后的 https 地址，否则可能会出现加载错误。\n部署阶段 打开群晖 CM 选择项目选项。 选择新建项目。 填写好项目名称以及项目地址（wallabag），创建新的 compose 文件，开始部署。\n","date":"2023-12-25T06:30:59+09:00","image":"https://rashida.cab:5065/i/2023/12/25/8vv12i.jpg","permalink":"https://rashidakaku.github.io/p/wallabag-%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/","title":"Wallabag 安装方法"},{"content":"群晖 Container Manager（下面简称 CM） 部署教程。 immich 项目官方地址。\n1.90.x 后 compose 文件内容有了较大变化，之前的升级后可能会导致数据丢失，请谨慎升级。\n准备工作 方法一 首先打开群晖的文件管理在 docker 目录下 创建 immich-app 文件夹。\n再用 SSH 工具链接群晖 DSM 系统 。\ncd 到 immich-app 文件夹。\n运行下面两串命令，下载 docker compose 和 .env 文件。\n1 wget https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml 1 wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env 修改 .env 文件中的\n1 UPLOAD_LOCATION=./library #替换成你的实际路径 修改 compose 文件中的映射端口。\n方法二 去项目官网下载 docker compose 和 .env 文件，放到 immich-app 文件夹内。\n修改 .env 文件中的\n1 UPLOAD_LOCATION=./library #替换成你的实际路径 修改 compose 文件中的映射端口。\n部署阶段 打开群晖 CM 选择项目选项。\n选择新建项目。\n填写好项目名称以及项目地址（immich-app），提示使用已有 compose 文件，选择直接使用，开始部署。\n更新 Immich 注意服务器版本和 APP 版本要保持一致！！否则无法使用 APP。\n先在项目中停用 Immich。\n打开群晖 SSH。\n使用链接工具链接后 sudo -i 获取管理员权限。\ncd 命令跳转到你 compose yaml 文件存储位置。\n使用命令开始更新\n1 docker-compose pull 更新后回到群晖 CM 找到容器 之前创建的 Immich容器。\n右键复制设置然后清除就容器的端口号，在复制后的新容器中填写。\n启动 CM 项目，打开Immich 网页端。\n如果没有问题且更新到最新版，就可以删除旧容器正常使用了。\n","date":"2023-12-22T16:47:59+09:00","image":"https://rashida.cab:5065/i/2023/12/23/pa4lk.jpg","permalink":"https://rashidakaku.github.io/p/immich-1.90.x-%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/","title":"Immich 1.90.x 安装方法"},{"content":"群晖 Container Manager（下面简称 CM） 部署教程。 immich 项目官方地址。\n打开群晖 CM 选择项目选项。\n选择新建项目。\n填写好项目名称以及项目地址。\n创建 Docker compose 代码如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 version: \u0026#34;2.1\u0026#34; services: immich: image: ghcr.io/imagegenius/immich:latest container_name: immich environment: - PUID=0 - PGID=0 - TZ=Asia/Shanghai - DB_HOSTNAME=填写你自己的 localhost 地址 - DB_USERNAME=postgres - DB_PASSWORD=postgres - DB_DATABASE_NAME=immich - REDIS_HOSTNAME=填写你自己的 localhost 地址 - DISABLE_MACHINE_LEANRNING=false - DISABLE_TYPESENSE=false - DB_PORT=5668 - REDIS_PORT=6332 - REDIS_PASSWORD= - CUDA_ACCELERATION=false volumes: - 实际存储地址/config:/config - 实际存储地址/Photo:/photos - 实际存储地址/machine:/config/machine-learning ports: - 端口号:8080 restart: unless-stopped redis: image: redis ports: - 6332（上方变量 REDIS_PORT=6332 保持一致）:6379 container_name: redis postgres14: image: postgres:14 ports: - 5668（上方变量 DB_PORT=5668 保持一致）:5432 container_name: postgres14 environment: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: immich volumes: - /volume1/docker/immich/db:/var/lib/postgresql/data 更新 Immich 注意服务器版本和 APP 版本要保持一致！！否则无法使用 APP。\n先在项目中停用 Immich。\n打开群晖 SSH。\n使用链接工具链接后 sudo -i 获取管理员权限。\ncd 命令跳转到你 compose yaml 文件存储位置。\n使用命令开始更新\n1 docker-compose pull 更新后回到群晖 CM 找到容器 之前创建的 Immich容器。\n右键复制设置然后清除就容器的端口号，在复制后的新容器中填写。\n启动 CM 项目，打开Immich 网页端。\n如果没有问题且更新到最新版，就可以删除旧容器正常使用了。\n","date":"2023-12-03T16:47:59+09:00","image":"https://rashida.cab:5065/i/2023/12/03/pambft.jpg","permalink":"https://rashidakaku.github.io/p/immich-%E7%BE%A4%E6%99%96%E7%9B%B8%E5%86%8C%E6%9B%BF%E4%BB%A3/","title":"Immich 群晖相册替代"},{"content":"！！！更新 Docker 可能会出现未知问题，请谨慎更新！！！\n快速启动 执行以下标准命令启动 Watch­tower 容器，并每 5 分钟一次检查所有容器的镜像是否为最新版，如发现镜像更新将会自动停止容器，删除容器，拉取最新镜像，在以之前启动容器的命令启动容器。\n1 2 3 4 docker run -d \\ --name watchtower \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower 清理旧镜像 镜像在更新后旧镜像标签会变为 none，长期自动更新会导致过多的 none 镜像占用空间，加入\u0026ndash;cleanup 参数可以在每次更新后自动删除 none 镜像。\n1 2 3 4 5 6 docker run -d \\ --name watchtower \\ --restart always \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup 指定容器更新 如无需自动更新所有稳定运行的容器，可以配置仅更新指定容器，只需要在命令后加上容器名：例如只更新 nginx 和 redis。\n注意指定容器需填写 容器名，并非镜像名。由于部分容器启动时可能没有定义 \u0026ndash;name 参数，请执行 docker ps 查询核对容器名。\n1 2 3 4 5 6 7 docker run -d \\ --name watchtower \\ --restart always \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup \\ nginx redis 配置自动更新频率 Watch­tower\n默认每 5 分钟轮询一次，可以使用以下参数配置更新的频率。\n\u0026ndash;interval,-i 配置更新周期，默认 300 秒。 \u0026ndash;schedule,-s 配置定时更新，使用 Cron 表达式，例如 \u0026ldquo;0 0 1 * * *\u0026rdquo; 即每天凌晨 1 点更新。 ！！！当使用 -s 参数来配置定时更新时，由于容器内默认为 UTC 时间，上述设置的 凌晨 1 点 实际上是北京时间早上 9 点，可以通过加上 -e TZ=Asia/Shanghai 环境变量来定义时区，此时配置的时间则为北京时间。 每小时更新一次 1 2 3 4 5 6 7 docker run -d \\ --name watchtower \\ --restart always \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup \\ -i 3600 每天凌晨 1 点更新（北京时间） 1 2 3 4 5 6 7 8 docker run -d \\ --name watchtower \\ --restart always \\ -e TZ=Asia/Shanghai \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup \\ -s \u0026#34;0 0 1 * * *\u0026#34; 手动更新 使用手动更新的方式，运行一次 Watch­tower 容器来更新所需的容器，更新后会自动删除本次运行的 Watch­tower 容器：只需要加上\u0026ndash;rm 和\u0026ndash;run-once 参数即可，同时也可以配合以上指定容器或指定排除容器的参数来使用。\n手动更新所有容器 1 2 3 4 5 docker run --rm \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup \\ --run-once 手动更新指定容器 1 2 3 4 5 6 docker run --rm \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower \\ --cleanup \\ --run-once \\ nginx redis ","date":"2023-06-29T05:53:11+09:00","image":"https://photo-1307600264.cos.ap-hongkong.myqcloud.com/Bing/2023-06/wallpaper_20230627.jpg","permalink":"https://rashidakaku.github.io/p/docker-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/","title":"Docker 自动更新"},{"content":"Aria2 Pro Docker Cli 部署 需要修改用户路径，其余可不修改。\n1 2 3 4 5 6 7 8 9 10 11 12 13 docker run -d \\ --name Aria2 \\ --restart unless-stopped \\ --log-opt max-size=1m \\ --network host \\ -e PUID=$UID \\ -e PGID=$GID \\ -e RPC_SECRET=\u0026lt;TOKEN\u0026gt; \\ -e RPC_PORT=6800 \\ -e LISTEN_PORT=6888 \\ -v $PWD/aria2-config:/config \\ -v $PWD/aria2-downloads:/downloads \\ p3terx/aria2-pro AriaNG Docker Cli 部署 可以修改用户端口\n可以在 Docker 面板中设置关联容器 Aria2\n1 2 3 4 5 6 docker run -d \\ --name AriaNG \\ --restart unless-stopped \\ --log-opt max-size=1m \\ -p 6880:6880 \\ p3terx/ariang 群晖使用 Docker Cli 方法 打开群晖控制面板 找到任务计划 新增计划任务-用户脚本 随意填写任务名称 用户角色选 Root 在脚本处粘贴 Docker Cli 并保存 运行脚本后删除 等待部署完成 ","date":"2023-06-27T05:53:11+09:00","image":"https://photo-1307600264.cos.ap-hongkong.myqcloud.com/Bing/2023-06/wallpaper_20230628.jpg","permalink":"https://rashidakaku.github.io/p/aria2-%E4%B8%8B%E8%BD%BD%E5%99%A8%E9%83%A8%E7%BD%B2/","title":"Aria2 下载器部署"},{"content":"Rashida TTS 欢迎使用 注意：TXT 编码格式需为 UTF8\n基于 PYTTSX3 的文本转语音工具\nUI 为 TKINTER\n测试 43000 字符没有问题\nB 站视频展示https://www.bilibili.com/video/av442548077/\n常见问题 .py 文件无法正常运行 一般是由于缺少运行库，可以尝试使用 PIP 解决\n1 pip install -r requirements.txt Linux 系统缺少 espeak ArchLinux 以及基于此系统的发行版 Linux 用户可以通过 yay 安装 AUR 包 espeak 解决这个问题\nUbuntu 系统可以通过安装 espeak 解决\n如果尚未解决，可以尝试重新安装 pyttsx3 模块\n","date":"2023-05-09T20:24:05+09:00","image":"https://photo-1307600264.cos.ap-hongkong.myqcloud.com/Bing/2023-05/wallpaper_20230531.jpg","permalink":"https://rashidakaku.github.io/p/rashida-tts/","title":"Rashida TTS"},{"content":" 利用 Python 新建 Hugo 文章到指定文件夹\n使用方式 1. 设置文章的元数据 2. 指定 Hugo 的文章目录路径 3. 创建新的 Markdown 文件 Hugo 的文章目录路径默认为 Content 文件夹\n文件名默认为元数据中的 Title\n替换代码中的 % 占位符\n1 在代码 --- 之后 \u0026#34;\u0026#34;\u0026#34; 之上添加你文章的内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import os from datetime import datetime # 设置文章的元数据 title = \u0026#34;%\u0026#34; # 文章标题 description = \u0026#34;%\u0026#34; # 文章描述 tags = [%] # 文章标签 categories = \u0026#34;%\u0026#34; # 文章分类 date = datetime.now().strftime(\u0026#34;%Y-%m-%dT%H:%M:%S+09:00\u0026#34;) # 文章创建时间 featured_image = \u0026#34;%\u0026#34; # 文章特色图片 # 生成Markdown内容 content = f\u0026#34;\u0026#34;\u0026#34;--- title: \u0026#34;{title}\u0026#34; description: \u0026#34;{description}\u0026#34; tags: {tags} categories: \u0026#34;{categories}\u0026#34; date: \u0026#34;{date}\u0026#34; featured_image: \u0026#34;{featured_image}\u0026#34; --- %%%%%%%%%%%%% \u0026#34;\u0026#34;\u0026#34; # 在上方 --- 之后 \u0026#34;\u0026#34;\u0026#34; 之上添加你文章的内容 # 指定Hugo的文章目录路径 hugo_content_dir = r\u0026#34;%%%%%%%完整路径%%%%%%\u0026#34; # 创建新的Markdown文件 slug = title.lower().replace(\u0026#34; \u0026#34;, \u0026#34;-\u0026#34;) file_path = os.path.join(hugo_content_dir, f\u0026#34;{slug}.md\u0026#34;) with open(file_path, \u0026#34;w\u0026#34;) as f: f.write(content) print(f\u0026#34;成功创建新的Hugo文章：{file_path}\u0026#34;) ","date":"2023-05-09T04:53:11+09:00","image":"https://photo-1307600264.cos.ap-hongkong.myqcloud.com/Bing/2023-06/wallpaper_20230607.jpg","permalink":"https://rashidakaku.github.io/p/hugo-%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/","title":"Hugo 新建文章"},{"content":"重装系统 文中 PE 为优启通，推荐使用。\n准备： 一个大于 8G 的 U 盘用于制作 PE 系统（注意备份，制作 PE 过程中会格式化 U 盘）。\n优启通\n系统镜像\n原版,Itellyou\n精简,Windsys\n精简,吻妻\nPE 制作 下载优启通，解压后启动软件。 默认选 U 盘模式即可。 确认即将制作的是你的 U 盘（拔出其余外接 U 盘、硬盘）。 点全新制作即可开始制作了，如果你的优盘之前制作过优启通，这里点免格升级即可，数据不会丢失，直接升级到最新的优启通。 提示操作完成即可。 重装系统 将下载的镜像移入制作好的 U 盘。 请将电脑关机，将 PE 优盘插入到电脑后开机。然后在开机后的几秒内，当出现开机画面，按下快捷启动热键F12（不同机型请查看下面快捷键列表）进入启动项列表，然后在列表中通过方向键选择 U 盘所在选项，一般会带 USB 字样或者是 U 盘的品牌名（Sandisk、Toshiba 之类），然后敲击回车可以进入 U 盘的 PE 菜单选择界面。 进入优启通启动菜单选择界面，根据自身配置选择系统，以 Win 10 x64 为例。小键盘上下选择，回车确认。\n进 PE 系统后，运行桌面“DG 硬盘分区”工具。\n运行桌面“EIX 系统安装”工具。\n在工具窗口左边选择要恢复的镜像文件，右边选择要安装系统的目标分区，然后点击“一键恢复”。\n在弹出窗口中去掉“驱动调用”勾选，另外的选项保持默认即可“确认”执行。\n等待系统安装完成。\n重启电脑，进入系统（或创建用户界面）。\n","date":"2023-05-09T04:53:11+09:00","image":"https://photo-1307600264.cos.ap-hongkong.myqcloud.com/Bing/2023-05/wallpaper_20230516.jpg","permalink":"https://rashidakaku.github.io/p/win-%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F/","title":"Win 重装系统"}]